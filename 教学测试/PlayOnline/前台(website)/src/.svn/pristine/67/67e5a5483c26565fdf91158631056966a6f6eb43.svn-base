<template>
  <div class="block-player">
  <div id="top"></div>
    <div class="card-block">
      <div class="card-img">
        <video :src='nowFile.fileSrc'
         autoplay controls="controls"
         width='100%' height='auto'>
          <!-- <source src="F:\001.avi" type="video/"> -->
        </video>
      </div>
      <div class="card-discribe">
        <div class="title-discribe">
          {{ fileItem.title }}
        </div>
        <div class="box-discribe">
          <span class="share-discribe">
            描述：{{ fileItem.discribe }}
          </span>
          <span class="flag-discribe">
            <div class="">
              <img src="../assets/icons/price.png" class="icon">
              <span class="flag-number">{{ fileItem.flag }}</span>
            </div>
            <div class="" @click="toRecommend">
              <img v-if="flag.recommended" src="../assets/icons/rec1.png" class="icon">
              <img v-else src="../assets/icons/rec0.png" class="icon">
              <span class="flag-number">{{flag.recommended?'取消推荐':'点击推荐'}}</span>
            </div>
          </span>
        </div>
      </div>
    </div>
    <div class="block-list">
      <div class="list-on">
        当前：{{ nowFile.title }}
        <span class="btn-list" @click="showList">选集</span>
      </div>
      <!-- <transition name="shrink"> -->
        <ul :class="{fold: !flag.showList,unfold: flag.showList}">
          <li v-for="item in itemList" :key="item.date"
          @click="toPlay(item)" :class="{active: nowFile==item}">
            {{ item.title }}
          </li>
        </ul>
      <!-- </transition> -->
      </div>
    <div>
      
      <div class="title-comment">
        <span class="title">评论区</span>
        <span class="btn" @click="showComment">添加评论</span>
      </div>

      <div class="edit" v-show="flag.showComment">
        <textarea class="input-comment" v-model="myComment"></textarea>
        <div class="submit" @click="comment">发表</div>
      </div>

      <div class="block-comment">
        <div v-for="i in comments" :key="i.user.userId"
        class="comment">
          <div class="user">{{i.user.name}}</div>
          <div class="content">{{i.content}}</div>
        </div>
      </div>
    </div>
  </div>
</template>
<script>
import IP from '@/assets/js/ip'
import Comments from '@/components/Comments'
// import Listener from '@/assets/listener'
export default {
  name: "player",
  created() {
    this.recommend(false)
  },
  mounted() {
    // this.$emit('playermounted')
    this.getFileGroup()
//  this.getComments()
  },
  data(){
    return{
      src: '',
      itemList: [],
      // item: {},
      // author: {},
      flag: {
        showList: false,
        recommended:false,
        showComment: false
      },
      nowFile: {},
      comments: [
        {
          user: {name:'1'},
          content: 'adsf',
          date: 'adsf'
        },
        {
          user: {name:'2'},
          content: 'qwert',
          date: 'qwert'
        },
        {
          user: {name:'3'},
          content: 'zcxv',
          date: 'zcxv'
        }
      ],
      myComment: ''
    }
  },
  computed: {
    fileItem() {
      return this.$store.state.currentFileGroup.fileGroup
    },
    author() {
      return this.$store.state.currentFileGroup.author
    },
    isLogin() {
      return this.$store.getters.isLogin
    }
  },
  methods: {
    defaultPlay(){
      //读取该视频组上次播放的集数
      let fileInfo = JSON.parse(localStorage.getItem(this.fileItem.fileGroupId))
      if(fileInfo == null){
        fileInfo = this.itemList[0]
      }
      this.toPlay(fileInfo)//默认播放第一个视频
    },
    toPlay(file) {
      this.nowFile = file
      console.log('this.nowFile',this.nowFile)
      localStorage.setItem(this.fileItem.fileGroupId,JSON.stringify(file))
      this.getComments()
    },
    showList(){
      this.flag.showList = !this.flag.showList
    },
    toRecommend(){
      if(this.isLogin){
        this.recommend(true)
      }
      else{
        console.log('登陆')
        this.$router.push('/Login')
      }
    },
    showComment(){
      if(!this.isLogin){
        console.log('登陆')
        this.$router.push('/Login')
      }
      else{
        this.flag.showComment = !this.flag.showComment
      }
    },
    //请求部分------------------------------------------
    getFileGroup() {
      this.$http.post(
        IP+'/client',
        {
        	method: 'getFileGroup',
          fileGroupId: this.fileItem.fileGroupId
        },
        {emulateJSON: true}
      )
      .then(res=>{
        this.itemList = res.data.fileGroup
        this.defaultPlay()
      })
      .catch(err=>{
        // this.defaultPlay()
      })
    },
    //查询是否已经推荐以及进行推荐操作
    recommend(tf){
      this.$http.post(
        'IP/user',
        {
          method: 'recommend',
          userId: this.$store.getters.user.userId,
          fileGroupId: this.fileItem.fileGroupId,
          //当tf为true时要更改推荐记录，false时只查询
          change: tf
        },
        {emulateJSON: true}
      )
      .then(res=>{
        if(res.data.recommended==true){
          this.flag.recommended = true
        }
        else{
          this.flag.recommended = false
        }
      })
      .catch(err=>{
        // this.flag.recommended = !this.flag.recommended
      })
    },
    //获取评论
    getComments(){
    	console.log('this.nowFile',this.nowFile)
      this.$http.post(
        'IP/user',
        {
          method: 'getComments',
          fileId: this.nowFile.fileId
        },
        {emulateJSON: true}
      )
      .then(res=>{
      	console.log('res.data in comm',res.data.comments)
				this.comments = res.data.comments
      })
      .catch(err=>{
      	alert('获取评论失败')
      })
    },
    comment(){
      this.$http.post(
        'IP/user',
        {
          method: 'comment',
          userId: this.$store.getters.user.userId,
          fileId: this.nowFile.fileId,
          content: this.myComment
        },
        {emulateJSON: true}
      )
      .then(res=>{
      	console.log('res.data in comments', res.data)
        if(res.data.status==true){
          this.comments.unshift({
            user: this.$store.getters.user,
            content: this.myComment
          })
        }
        else{
          alert(res.data.info)
        }
      })
      .catch(err=>{
        this.comments.unshift({
          user: this.$store.getters.user,
          content: this.myComment
        })
        alert('失败')
      })
    }
  },
  components: {
    Comments
  }
}
</script>
<style lang="css" scoped>
::-webkit-scrollbar{
  height: 0px;
  width: 10px;
}
::-webkit-scrollbar-thumb{
  background-color: rgba(255, 255, 255, 0.35);
  border-radius: 4px;
}
.block-player{
  /* background: rgb(20, 20, 20); */
}
.card-block{
  height: auto;
  background: rgb(20, 20, 20);
}
.card-img{
  width: 100%;
  padding: 0px;
  height: auto;
}
.card-img img{
  height: auto;
  width: 100%;
}
.card-discribe{
  position: relative;
  padding: 0px 12px 5px 12px;
  height: auto;
}
.title-discribe{
  text-align: center;
  color: white;
  font-size: 18px;
  font-weight: 400;
}
.box-discribe{
  display: flex;
  /*padding-bottom: 5px;*/
}
.share-discribe{
  flex:7;
  color: white;
  overflow: hidden;
}
.icon{
  position: relative;
  top: 3px;
  padding-right: 3px;
  width: auto;
  height: 15px;
}
.flag-number{
  /*position: absolute;
  top: 0px;*/
  display: inline-block;
  font-size: 13px;
  height: 15px;
  /*border: 1px solid white;*/
}
.flag-discribe{
  flex: 2;
  color: white;
}

.block-list{
  position: relative;
  background: rgb(20, 20, 20);
  overflow: hidden;
  font-size: 15px;
}
.list-on{
  margin: 0px 0px 1px 0px;
  padding: 7px 0px 7px 20px;
  height: 30px;
  line-height: 30px;
  color: rgb(175, 175, 175);
  background: rgba(77, 77, 77, 0.11);
}
.btn-list{
  float: right;
  padding: 0px 20px;
  border-left: 2px solid rgb(20, 20, 20);
}
.block-list ul{
  position: relative;
  /*border: 1px solid red;*/
  /*border-left: 3px solid rgb(175, 175, 175);*/
  list-style: none;
  margin: 0px;
  padding: 0px;
  top: 0px;
  overflow: scroll;
}
.block-list li{
  margin: 2px 0px;
  padding: 7px 20px;
  height: 30px;
  line-height: 30px;
  color: rgb(175, 175, 175);
  background: rgba(77, 77, 77, 0.1);
}
.active{
  border-left: 5px solid rgba(255, 0, 0, 0.6);
  transition: all 0.3s;
}
.fold{
  height: 0em;
  transition: height 0.3s;
}
.unfold{
  height: 14.3em;
  transition: height 0.3s;
}
.block-comment{
  margin: 5px 0px;
}
.title-comment{
  padding: 5px 10px;
}
.edit{
  box-sizing: border-box;
  position: relative;
  margin: 0px 2%;
  border: 1px solid gray;
  border-radius: 3px;
  width: 96%;
}
.input-comment{
  box-sizing: border-box;
  width: 100%;
  height: 60px;
  background: transparent;
  outline: none;
  resize: none;
  border: 0px;
  font-size: 17px;
}
.submit{
  position: absolute;
  padding: 2px 5px;
  right: 3px;
  bottom: 3px;
  background: gray;
  color: white;
  border-radius: 3px;
}
.comment{
  margin: 1px 0px;
  padding: 5px 10px;
  background: white;
  color: black;
}
.btn{
  float: right;
  background: gray;
  color: white;
  padding: 2px 5px;
  border-radius: 3px;
}
.comment .user{
  font-weight: bold;
}
</style>
